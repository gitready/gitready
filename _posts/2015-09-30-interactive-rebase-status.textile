---
published: false
layout: post
title: "interactive rebase status"
category: intermediate
---

With "git 2.6":https://github.com/git/git/blob/v2.6.0/Documentation/RelNotes/2.6.0.txt it's now easier than ever to keep track of your work during an interactive rebase.

Previously, if you were rebasing interactively and had hit a conflict or stopped to reword a commit, git status would look like this:

<pre>
$ git rebase -i HEAD~5
$ git status
rebase in progress; onto 0927cd6
You are currently rebasing branch 'testbranch' on '0927cd6'.
  (fix conflicts and then run "git rebase --continue")
</pre>

This only tells you what branch you started with and the target of your rebase. If you want to get information about which commit you'vestopped on, you need to turn to "git log".

With the release of 2.6, git status now produces much more helpful output that *reminds you what you were doing*. It includes which rebase commands have finished already, and what's still left to do.

<pre>
$ git rebase -i HEAD~5
$ git status
interactive rebase in progress; onto '0927cd6'

Last commands done (2 done):
  pick f47cc4d Style edits
  pick 903d58c Post about techcrunch article
  edit 8cd01c4 Limit width of post content

Next commands to do (1 remaining commands):
  pick 6aa9082 Delete zero-sized files

You are currently editing a commit while rebasing branch 'testbranch' on '0927cd6'.

nothing to commit, working directory clean
</pre>

This gives you more context when working with your commit history, so you know why the rebase stopped.
